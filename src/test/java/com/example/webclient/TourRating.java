package com.example.webclient;

import java.io.Serializable;
import java.util.Objects;
// import java.io.Serializable; // Uncomment if Java Object Serialization is needed

/**
 * Represents a rating given by a customer for a specific tour.
 */
public class TourRating  implements Serializable { // Uncomment if needed

  // private static final long serialVersionUID = 1L; // Uncomment if Serializable is implemented

  private String id;         // Unique identifier for the rating itself (often generated by DB)
  private String tourId;     // Identifier for the tour being rated
  private Integer customerId; // Identifier for the customer who gave the rating
  private Integer score;      // The rating score (e.g., 1-5)
  private String comment;    // An optional comment provided by the customer

  /**
   * Public no-argument constructor. Needed by frameworks like Jackson (JSON), JPA (Persistence),
   * etc.
   */
  public TourRating() {
  }

  /**
   * Constructor for creating a new rating before it's persisted (typically the 'id' is generated
   * upon saving).
   *
   * @param tourId     The ID of the tour being rated.
   * @param customerId The ID of the customer giving the rating.
   * @param score      The score given.
   * @param comment    The comment given.
   */
  public TourRating(String tourId, Integer customerId, Integer score, String comment) {
    this.tourId = tourId;
    this.customerId = customerId;
    this.score = score;
    this.comment = comment;
  }

  // --- Getters and Setters ---

  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public String getTourId() {
    return tourId;
  }

  public void setTourId(String tourId) {
    this.tourId = tourId;
  }

  public Integer getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }

  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }

  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  // --- equals, hashCode, toString ---

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TourRating that = (TourRating) o;
    return Objects.equals(id, that.id) &&
        // Include ID in equals/hashCode if it's a stable identifier
        Objects.equals(tourId, that.tourId) &&
        Objects.equals(customerId, that.customerId) &&
        Objects.equals(score, that.score) &&
        Objects.equals(comment, that.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tourId, customerId, score, comment); // Include ID here too
  }

  @Override
  public String toString() {
    return "TourRating{" +
        "id='" + id + '\'' +
        ", tourId='" + tourId + '\'' +
        ", customerId=" + customerId +
        ", score=" + score +
        ", comment='" + comment + '\'' +
        '}';
  }
}